name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Fetch compiler
        uses: actions/checkout@v3
        with:
          repository: clipmove/watcom106
          path: ./WC10S/
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}
      - name: install-prerequisites
        run: |
          ls
          sudo apt-get update
          sudo apt-get -y install dosbox zip git
      - name: Create Build Environment
        shell: bash
        run: |
          export SDL_VIDEODRIVER=dummy
          dosbox -c "mount c ./" -c "C:" -c "PATH C:\WC10S\BINW;%path%" -c "SET INCLUDE=C:\WC10S\H" -c "SET WATCOM=C:\WC10S" -c "SET EDPATH=C:\WC10S\EDDAT" -c "cd helix32" -c "wmake" -c "exit" -noconsole
          dosbox -c "mount c ./" -c "C:" -c "PATH C:\WC10S\BINW;%path%" -c "SET INCLUDE=C:\WC10S\H" -c "SET WATCOM=C:\WC10S" -c "SET EDPATH=C:\WC10S\EDDAT" -c "cd qtools" -c "wmake" -c "exit" -noconsole
          dosbox -c "mount c ./" -c "C:" -c "PATH C:\WC10S\BINW;%path%" -c "SET INCLUDE=C:\WC10S\H" -c "SET WATCOM=C:\WC10S" -c "SET EDPATH=C:\WC10S\EDDAT" -c "cd blood" -c "wmake" -c "exit" -noconsole
      - name: Prepare artifact for artifact
        run: |
          mkdir -p ./upload
          cp -a "blood/BLOOD.EXE" ./upload/
          cp -a "BUILDLIC.TXT" ./upload/
          cp -a "Readme.md" ./upload/
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dosblood
          path: upload/
          retention-days: 0
      - name: Prepare artifact for publishing
        id: create-zip-artifact
        run: |
          revisiondate="$(date +%Y-%m-%d)"
          echo "revisiondate=$revisiondate" >> $GITHUB_OUTPUT
          cd upload
          zip -r9 "./DOSBlood_$revisiondate.zip" ./
          cd ..
      - name: Publish artifacts to release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "Latest Build"
          files: |
              ./upload/*.zip
